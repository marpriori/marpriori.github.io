"use strict";angular.module("randlistApp",["ngRoute","ngAnimate","ngFileSaver","ui.bootstrap","LocalStorageModule"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/home.html",controller:"HomeCtrl",controllerAs:"home"}).when("/importation",{templateUrl:"views/importation.html",controller:"ImportationCtrl",controllerAs:"importation"}).when("/registers",{templateUrl:"views/registers.html",controller:"RegistersCtrl",controllerAs:"registers"}).when("/sweepstakes",{templateUrl:"views/sweepstakes.html",controller:"SweepstakesCtrl",controllerAs:"sweepstakes"}).when("/sweepstakes/:uuid/:register?",{templateUrl:"views/sweepstake.html",controller:"SweepstakeCtrl",controllerAs:"sweepstake"}).otherwise({redirectTo:"/"})}]).config(["localStorageServiceProvider",function(a){a.setPrefix("randlist").setStorageType("localStorage").setNotify(!0,!0)}]),angular.module("randlistApp").directive("onReadFile",["$parse",function(a){return{restrict:"A",scope:!1,link:function(b,c,d){var e=a(d.onReadFile);c.on("change",function(a){var d=new FileReader,f=angular.copy(a);d.onload=function(a){b.$apply(function(){e(b,{$fileContent:a.target.result})})},d.readAsText((f.srcElement||f.target).files[0]),c.val(void 0)})}}}]),angular.module("randlistApp").factory("uuid",function(){var a=function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)};return{generate:function(){return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()}}}),angular.module("randlistApp").service("exportList",["FileSaver","Blob",function(a,b){return{save:function(c,d){var e=new b([d],{type:"text/plain;charset=utf-8"});a.saveAs(e,c)}}}]),angular.module("randlistApp").controller("MainCtrl",["$scope","localStorageService",function(a,b){function c(){var a=b.get("body"),c=b.get("sweepstakes");d.totalRegisters=a&&a.length||0,d.totalSweepstakes=c&&c.length||0}var d=this;a.$on("$routeChangeStart",function(a,b){d.currentControllerAs=b.controllerAs}),a.$on("LocalStorageModule.notification.removeitem",function(){c()}),a.$on("LocalStorageModule.notification.setitem",function(){c()}),c()}]),angular.module("randlistApp").controller("HomeCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("randlistApp").controller("ImportationCtrl",["$scope","$location","localStorageService",function(a,b,c){function d(a){return a?a.trim().replace("\r","").replace("\n",""):a}function e(a){return a.indexOf(",")>-1?",":a.indexOf(";")>-1?";":a.indexOf("\t")>-1?"\\t":a.indexOf("|")>-1?"|":void 0}function f(a){return"head"in a&&"body"in a&&"sweepstakes"in a}var g=this;g.file=null,g.separator=null,g.firstIsHead=!0,g.ignored=[],g.table={head:[],body:[]},g.loadFile=function(a){g.file=a,g.separator=e(a)},g.loadBackup=function(a){var d=atob(a),e=angular.fromJson(d);void 0!==e&&f(e)&&(c.set("head",e.head),c.set("body",e.body),c.set("sweepstakes",e.sweepstakes),b.path("/registers"))},g.makeTable=function(a,b,c){if(a){var d=a.indexOf("\r")>-1?"\r":"\n",e=a.split(d).map(function(a){return a.split("\\t"===b?"\t":b||" ")}).filter(function(a){return a.some(function(a){return!!a})});g.table.head=c?e.shift():Array.apply(null,new Array(e[0].length)),g.table.body=e}},g.toggleColumn=function(a){var b=g.ignored.indexOf(a);b>-1?g.ignored.splice(b,!0):g.ignored.push(a)},g.isIgnoredColumn=function(a){return g.ignored.indexOf(a)>-1},g.proccess=function(a,e){var f=a.body.map(function(a){return{data:a.map(d).filter(function(a,b){return-1===e.indexOf(b)}),control:{win:!1,winAt:null,winFrom:null}}}),g=a.head.filter(function(a,b){return-1===e.indexOf(b)}).map(d);c.set("head",g),c.set("body",f),b.path("/registers")},a.$watchGroup(["importation.file","importation.separator","importation.firstIsHead"],function(a,b){a&&b!==a&&g.makeTable(g.file,g.separator,g.firstIsHead)})}]),angular.module("randlistApp").controller("RegistersCtrl",["$rootScope","$window","localStorageService","exportList",function(a,b,c,d){function e(){f.head=c.get("head")||[],f.body=c.get("body")||[]}var f=this;f.clean=function(){b.confirm("Isso apagará todos os dados inclusive os sorteios, deseja continuar?")&&(c.clearAll(),a.$broadcast("LocalStorageModule.notification.removeitem"),e())},f.add=function(a){f.body.push({data:Object.values(a),control:{win:!1,winAt:null}}),c.set("body",f.body)},f.remove=function(a){b.confirm("Isso apagará este registro, deseja continuar?")&&(f.body.splice(f.body.indexOf(a),!0),c.set("body",f.body))},f.save=function(){if(f.head.length&&f.body.length){var a={head:c.get("head")||{},body:c.get("body")||[],sweepstakes:c.get("sweepstakes")||[]},b=angular.toJson(a),e=btoa(b);d.save("backup.randlist",e)}},f.eBase64=function(a){return btoa(a)},e()}]),angular.module("randlistApp").controller("SweepstakesCtrl",["$scope","$window","$uibModal","localStorageService","uuid",function(a,b,c,d,e){function f(){g.head=d.get("head")||[],g.body=d.get("body")||[],g.list=d.get("sweepstakes")||[]}var g=this;g.add=function(a,b,c){g.list.push({uuid:e.generate(),name:a,filter:c,quantity:b}),d.set("sweepstakes",g.list)},g.validateFilter=function(b){if(!b)return{valid:!0,error:null};var c=a.$new();g.head.forEach(function(a,b){c[a]=angular.copy(g.body[0].data[b])});try{return c.$eval(b),{valid:!0,error:null}}catch(a){return{valid:!1,error:a.name+": "+a.message.split("\n")[0]}}},g.resultFilter=function(b){return g.body.filter(function(c){if(!b)return!0;var d=a.$new();g.head.forEach(function(a,b){d[a]=angular.copy(c.data[b])});try{return d.$eval(b)}catch(a){return!1}})},g.openFilter=function(b){var d=a.$new();d.filter=b,d.head=g.head,d.body=g.resultFilter(b),c.open({templateUrl:"resultFilter.html",size:"lg",scope:d})},g.openHelpFilter=function(){var b=a.$new();b.attrs=g.head,c.open({templateUrl:"helpFilter.html",size:"lg",scope:b})},g.remove=function(a){b.confirm("Isso apagará este sorteio, deseja continuar?")&&(g.list.splice(g.list.indexOf(a),!0),d.set("sweepstakes",g.list),g.filter="",g.candidates=[])},g.save=function(a){var b=g.list.indexOf(a);g.list[b]=a,d.set("sweepstakes",g.list)},g.executed=function(a){return g.body.filter(function(b){return b.control.winFrom===a}).length},f()}]),angular.module("randlistApp").controller("SweepstakeCtrl",["$scope","$window","$log","$routeParams","$location","exportList","localStorageService",function(a,b,c,d,e,f,g){function h(a){return a.uuid===k.uuid}function i(){k.head=g.get("head")||[],k.body=g.get("body")||[],k.sweepstakes=g.get("sweepstakes")||[],k.name=k.sweepstakes.find(h).name,k.filter=k.sweepstakes.find(h).filter,k.quantity=k.sweepstakes.find(h).quantity,k.makeWinnerList()}function j(a,b){if(a.length&&b.length){var c=b.map(function(a){return a.data.concat(a.control.winAt)});return a.push("sorteio"),c.unshift(a),c.map(function(a){return a.join(",")}).join("\n")}}var k=this;k.uuid=d.uuid,k.register=null,k.winners=[],k.run=function(){var c=k.body.filter(function(b){if(!k.filter)return!b.control.win;var c=a.$new();k.head.forEach(function(a,d){c[a]=angular.copy(b.data[d])});try{return!b.control.win&&c.$eval(k.filter)}catch(a){return!b.control.win}});if(c.length>0){var d=Math.floor(Math.random()*c.length),e=c[d],f=k.body.indexOf(e);k.register=e.data.toString(),k.body[f].control.win=!0,k.body[f].control.winAt=new Date,k.body[f].control.winFrom=k.uuid,g.set("body",k.body),i()}else k.register=null,b.alert("Não há mais candidatos disponíveis");return c.length&&c.length-1||0},k.runAll=function(){for(;k.winners.length<k.quantity&&k.run(););},k.makeWinnerList=function(){k.winners=k.body.filter(function(a){return a.control.win&&a.control.winFrom===k.uuid})},k.abort=function(a){b.confirm("Isso anulará este sorteado, deseja continuar?")&&(a.control.win=!1,a.control.winAt=null,a.control.winFrom=null,g.set("body",k.body),i())},k.print=function(){b.print()},k.exportCSV=function(a,b){if(a.length&&b.length){var c=angular.copy(a),d=angular.copy(b),e=j(c,d);f.save(k.name+".csv",e)}},function(a){if(a)try{k.register=atob(a)}catch(a){c.info(a),b.alert("Identificador de registro inválido"),e.path("/sweepstakes")}}(d.register),i()}]),angular.module("randlistApp").run(["$templateCache",function(a){a.put("views/home.html",'<div class="container"> <div class="row"> <div class="col-md-8 col-md-offset-2"> <div class="jumbotron"> <h1>Randlist.io</h1> <p class="lead"> Sorteios descomplicados para eventos e conferências </p> <a ng-href="#/importation" class="btn btn-primary btn-lg visible-xs-inline"> Importar lista </a> <a ng-href="#/importation" class="btn btn-primary btn-lg visible-sm-inline"> Assistente para importação </a> <a ng-href="#/importation" class="btn btn-primary btn-lg visible-md-inline visible-lg-inline"> Assistente para importação de listas </a> </div> <div class="feature"> <div class="icon"> <i class="fa fa-file-text-o" aria-hidden="true"></i> </div> <div class="text"> <h4>Importe sua lista de registros</h4> <p>Utilize nosso assistente para carregar e mapear facilmente arquivos gerados a partir de outras plataformas.</p> </div> </div> <div class="feature"> <div class="icon"> <i class="fa fa-sliders" aria-hidden="true"></i> </div> <div class="text"> <h4>Gerencie múltiplos sorteios</h4> <p>Cadastre vários itens em vários sorteios e visualize facilmente o que ainda falta ser sorteado.</p> </div> </div> <div class="feature"> <div class="icon"> <i class="fa fa-repeat" aria-hidden="true"></i> </div> <div class="text"> <h4>Blacklist para vencedores repetidos</h4> <p>Uma vez que um candidato ganhe, ele não ganhará novamente.</p> </div> </div> <div class="feature"> <div class="icon"> <i class="fa fa-filter" aria-hidden="true"></i> </div> <div class="text"> <h4>Escreva filtros com JS</h4> <p>Utilize os atributos dos registros para escrever expressões JavaScript e tornar seus sorteios mais específicos.</p> </div> </div> <div class="feature"> <div class="icon"> <i class="fa fa-sign-in" aria-hidden="true"></i> </div> <div class="text"> <h4>Não precisa de cadastro</h4> <p>Tudo acontece no Local Storage e não precisa de backend, login nem senha.</p> </div> </div> <div class="feature"> <div class="icon"> <i class="fa fa-exchange" aria-hidden="true"></i> </div> <div class="text"> <h4>Importe e exporte todos os seus dados</h4> <p>Gere um backup.randlist para posteriormente importar e continuar de onde parou em outro dispositivo.</p> </div> </div> <div class="feature"> <div class="icon"> <i class="fa fa-github" aria-hidden="true"></i> </div> <div class="text"> <h4>Projeto open source</h4> <p>Licenciado sob MIT com código aberto e acessível através do <a href="https://github.com/juniorconte/randlist">GitHub</a></p> </div> </div> </div> </div> </div>'),a.put("views/importation.html",'<form class="form-horizontal"> <div class="form-group"> <div class="col-sm-offset-2 col-sm-4"> <div class="btn btn-lg btn-primary fake-upload"> Carregar backup do randlist <input type="file" accept=".randlist" on-read-file="importation.loadBackup($fileContent)"> </div> </div> <div class="col-sm-offset-2 col-sm-10"> <p class="help-block"> Arquivos exclusivamente gerados a partir do botão de backup da tela de registros do Randlist.<br> Estes arquivos possuem a extensão .randlist </p> </div> </div> <hr> <div class="form-group"> <div class="col-sm-offset-2 col-sm-4"> <div class="btn btn-primary btn-lg fake-upload"> Carregar arquivo de texto <input type="file" accept=".txt, .dat, .csv, application/vnd.ms-excel" on-read-file="importation.loadFile($fileContent)"> </div> </div> <div class="col-sm-offset-2 col-sm-10"> <p class="help-block"> Arquivos com dados tabulados, separados por virgula, ponto e vírgula, etc.<br> Geralmente estes arquivos possuem extensão .csv </p> </div> </div> <div class="form-group"> <label for="separator" class="col-sm-2 control-label">Separador</label> <div class="col-sm-2"> <input type="text" id="separator" class="form-control col-sm" ng-model="importation.separator" maxlength="2"> </div> <div class="col-sm-offset-2 col-sm-10"> <p class="help-block"> Arquivos de texto devem possuir algum caractere separador.<br> O assistente tentará identificar o caractere, mas você pode trocá-lo e conferir o resultado abaixo. </p> </div> </div> <div class="form-group"> <label for="head" class="col-sm-2 control-label">Cabeçalho?</label> <div class="col-sm-2"> <input type="checkbox" id="head" ng-model="importation.firstIsHead"> </div> <div class="col-sm-offset-2 col-sm-10"> <p class="help-block"> Marque este chackbox caso a primeira linha do arquivo contenha o nome das colunas.<br> Você pode marcá-lo e desmarcá-lo conferindo o resultado abaixo.<br> Você ainda poderá alterar o valor padrão das colunas para algum valor de sua preferência. </p> </div> </div> </form> <hr ng-show="importation.table.body.length"> <div class="scroll-y" ng-if="importation.table.body.length"> <table class="table" ng-style="{width: (importation.table.head.length > 4 && (importation.table.head.length * 200) || \'100%\')}"> <thead> <tr> <th width="20"> # </th> <th ng-repeat="column in importation.table.head track by $index" ng-init="preserve = true"> <div class="input-group"> <input type="text" class="form-control input-sm" placeholder="atributo" ng-model="column" ng-change="importation.table.head[$index] = column" ng-disabled="!preserve" ng-model-options="{\r\n                updateOn: \'default blur\',\r\n                debounce: {\r\n                  \'default\': 1000,\r\n                  \'blur\': 0\r\n                }\r\n              }"> <span class="input-group-addon"> <input type="checkbox" ng-model="preserve" ng-change="importation.toggleColumn($index)"> </span> </div> </th> </tr> </thead> <tbody ng-init="limit = 8"> <tr ng-repeat="rows in importation.table.body | limitTo:limit"> <td> <strong>{{::$index+1}}</strong> </td> <td ng-repeat="cell in rows track by $index" ng-class="{\'ignored\':importation.isIgnoredColumn($index)}"> {{::cell}} </td> </tr> <tr ng-if="importation.table.body.length > limit"> <td colspan="{{importation.table.head.length+1}}"> ... </td> </tr> <tr ng-if="importation.table.body.length > limit"> <td> <strong>{{importation.table.body.length}}</strong> </td> <td ng-repeat="cell in importation.table.body[importation.table.body.length-1] track by $index" ng-class="{\'ignored\':importation.isIgnoredColumn($index)}"> {{::cell}} </td> </tr> </tbody> </table> </div> <hr> <div class="row"> <div class="col-sm-offset-2 col-sm-4"> <button type="button" class="btn btn-primary btn-lg" ng-click="importation.proccess(importation.table, importation.ignored)" ng-disabled="!importation.table.body.length"> Processar lista </button> </div> </div>'),a.put("views/registers.html",'<div class="row"> <div class="col-md-12"> <div class="input-group"> <input type="text" class="form-control" ng-model="search" placeholder="Localizar registro"> <span class="input-group-btn"> <button type="button" class="btn btn-default" ng-disabled="!search" ng-click="search = \'\'"> <i class="glyphicon glyphicon-remove-sign"></i> </button> </span> </div> </div> </div> <hr> <form ng-init="newer = {}" ng-submit="registers.add(newer); newer = {}"> <table class="table table-striped table-hover" ng-show="registers.body && registers.body.length > 0"> <thead> <tr> <th width="20"> # </th> <th ng-repeat="collum in ::registers.head track by $index"> {{::collum}} </th> <th width="20"></th> </tr> </thead> <tbody> <tr ng-repeat="row in registers.body | filter:search" class="animate-repeat" ng-class="{\'success\':row.control.win}"> <td><strong>{{::$index+1}}</strong></td> <td ng-repeat="cell in ::row.data track by $index"> {{::cell}} </td> <td ng-switch="::row.control.win"> <a class="btn btn-primary btn-sm" ng-switch-when="true" ng-href="#/sweepstakes/{{::row.control.winFrom}}/{{::registers.eBase64(row.data)}}"> <i class="glyphicon glyphicon-list"></i> </a> <button type="button" class="btn btn-danger btn-sm" ng-switch-when="false" ng-click="registers.remove(row)"> <i class="glyphicon glyphicon-remove"></i> </button> </td> </tr> <tr> <td class="text-muted"> <strong>{{registers.body.length+1}}</strong> </td> <td ng-repeat="collum in ::registers.head track by $index"> <input type="text" class="form-control input-sm expression" placeholder="{{::collum}}" ng-model="newer[collum]" required> </td> <td> <button type="submit" class="btn btn-success btn-sm"> <i class="glyphicon glyphicon-ok"></i> </button> </td> </tr> </tbody> </table> <div class="form-group" ng-show="registers.body && registers.body.length > 0"> <div class="pull-left"> <button type="button" class="btn btn-lg btn-primary" ng-click="registers.save()"> Gerar backup </button> </div> <div class="pull-right"> <button type="button" class="btn btn-lg btn-danger" ng-click="registers.clean()" ng-disabled="!registers.body || !registers.body.length"> Limpar tudo </button> </div> </div> </form>'),a.put("views/sweepstake.html",'<h1 class="visible-print">{{sweepstake.name}}</h1> <form class="form-horizontal hidden-print"> <div class="form-group"> <label for="separator" class="col-sm-2 control-label">Descrição</label> <div class="col-sm-10"> <p class="form-control-static">{{sweepstake.name}}</p> </div> </div> <div class="form-group"> <label for="separator" class="col-sm-2 control-label">Quantidade</label> <div class="col-sm-10"> <p class="form-control-static">{{sweepstake.quantity}}</p> </div> </div> <div class="form-group" ng-show="sweepstake.filter"> <label for="separator" class="col-sm-2 control-label">Filtro</label> <div class="col-sm-10"> <p class="form-control-static expression">{{sweepstake.filter}}</p> </div> </div> </form> <hr> <table class="table table-striped table-hover" ng-if="sweepstake.winners.length > 0"> <thead> <tr> <th width="20"> # </th> <th ng-repeat="column in ::sweepstake.head track by $index"> {{::column}} </th> <th> Sorteio </th> <th width="45"></th> </tr> </thead> <tbody> <tr ng-repeat="row in sweepstake.winners | orderBy:\'control.winAt\'" ng-class="{\'success\': sweepstake.register == row.data}"> <td> {{::$index+1}}º </td> <td ng-repeat="cell in row.data track by $index"> {{::cell}} </td> <td> {{::row.control.winAt | date:\'short\'}} </td> <td> <button type="button" class="btn btn-warning btn-sm" ng-click="sweepstake.abort(row)"> <i class="glyphicon glyphicon-ban-circle"></i> </button> </td> </tr> </tbody> </table> <hr> <div class="form-group hidden-print"> <div class="pull-left"> <button type="button" class="btn btn-lg btn-primary" ng-click="sweepstake.run()" ng-disabled="sweepstake.list.length == 0 || sweepstake.winners.length >= sweepstake.quantity"> Sortear um </button> <button type="button" class="btn btn-lg btn-primary" ng-click="sweepstake.runAll()" ng-disabled="sweepstake.list.length == 0 || sweepstake.winners.length >= sweepstake.quantity"> Sortear tudo </button> </div> <div class="pull-right"> <button type="button" class="btn btn-lg btn-default" ng-click="sweepstake.print()" ng-disabled="sweepstake.list.length == 0 || sweepstake.winners.length == 0"> Imprimir </button> <button type="button" class="btn btn-lg btn-default" ng-click="sweepstake.exportCSV(sweepstake.head, sweepstake.winners);" ng-disabled="!sweepstake.winners.length"> Exportar csv </button> </div> </div>'),a.put("views/sweepstakes.html",'<table class="table table-striped table-hover"> <thead> <tr> <th>Descrição</th> <th width="110">Quantidade</th> <th width="40"></th> <th colspan="2"> Filtro <button type="button" class="btn btn-info btn-xs pull-right" ng-click="sweepstakes.openHelpFilter()"> <i class="glyphicon glyphicon-info-sign"></i> Veja exemplos de como confgurar os filtros </button> </th> </tr> </thead> <tbody> <tr ng-repeat="sweepstake in sweepstakes.list" ng-init="executed = sweepstakes.executed(sweepstake.uuid)"> <td> <input type="text" class="form-control input-sm expression" placeholder="O que será sorteado?" ng-model="sweepstake.name" ng-change="sweepstakes.save(sweepstake)" ng-model-options="{\r\n            updateOn: \'default blur\',\r\n            debounce: {\r\n              \'default\': 1000,\r\n              \'blur\': 0\r\n            }\r\n          }"> </td> <td> <input type="number" class="form-control input-sm expression" placeholder="Quantos?" min="1" ng-model="sweepstake.quantity" ng-change="sweepstakes.save(sweepstake)" ng-model-options="{\r\n            updateOn: \'default blur\',\r\n            debounce: {\r\n              \'default\': 1000,\r\n              \'blur\': 0\r\n            }\r\n          }"> </td> <td> <span class="btn btn-success btn-block btn-sm" ng-class="{\r\n            \'btn-success\': (executed < sweepstake.quantity),\r\n            \'btn-warning\': (executed == sweepstake.quantity),\r\n            \'btn-danger\': (executed > sweepstake.quantity)\r\n          }"> {{executed}} </span> </td> <td> <div class="input-group input-group-sm" uib-popover="{{sweepstakes.validateFilter(sweepstake.filter).error}}" popover-is-open="!sweepstakes.validateFilter(sweepstake.filter).valid" popover-placement="bottom-left" popover-trigger="\'none\'"> <input type="text" class="form-control expression" placeholder="Escreva o filtro utilizando JavaScript" ng-model="sweepstake.filter" ng-change="sweepstakes.save(sweepstake)" ng-model-options="{\r\n              updateOn: \'default blur\',\r\n              debounce: {\r\n                \'default\': 100,\r\n                \'blur\': 0\r\n              }\r\n            }"> <span class="badge filter-quantity"> {{sweepstakes.resultFilter(sweepstake.filter).length}} </span> <span class="input-group-btn"> <button type="button" class="btn btn-default" ng-click="sweepstakes.openFilter(sweepstake.filter)"> <i class="glyphicon glyphicon-eye-open"></i> </button> </span> </div> </td> <td width="90"> <a class="btn btn-primary btn-sm" ng-href="#/sweepstakes/{{sweepstake.uuid}}"> <i class="glyphicon glyphicon-list"></i> </a> <button type="button" class="btn btn-danger btn-sm" ng-click="sweepstakes.remove(sweepstake)" ng-disabled="executed"> <i class="glyphicon glyphicon-remove"></i> </button> </td> </tr> <tr> <td> <input type="text" class="form-control input-sm expression" placeholder="O que será sorteado?" ng-model="name"> </td> <td> <input type="number" class="form-control input-sm expression" placeholder="Quantos?" ng-model="quantity" min="1"> </td> <td> <span class="btn btn-default btn-block btn-sm">0</span> </td> <td> <div class="input-group input-group-sm" uib-popover="{{sweepstakes.validateFilter(filter).error}}" popover-is-open="!sweepstakes.validateFilter(filter).valid" popover-placement="bottom-left" popover-trigger="\'none\'"> <input type="text" class="form-control input-sm expression" placeholder="Escreva o filtro utilizando JavaScript" ng-model="filter"> <span class="badge filter-quantity"> {{sweepstakes.resultFilter(filter).length}} </span> <span class="input-group-btn"> <button type="button" class="btn btn-default" ng-click="sweepstakes.openFilter(filter)"> <i class="glyphicon glyphicon-eye-open"></i> </button> </span> </div> </td> <td width="90"> <button type="button" class="btn btn-success btn-sm" ng-disabled="sweepstakesForm.$invalid" ng-click="sweepstakes.add(name, quantity, filter);\r\n            name = quantity = filter = null"> <i class="glyphicon glyphicon-ok"></i> </button> <button type="button" class="btn btn-danger btn-sm" disabled> <i class="glyphicon glyphicon-remove"></i> </button> </td> </tr> </tbody> </table> <script type="text/ng-template" id="resultFilter.html"><div class="modal-header">\r\n    <button type="button"\r\n      class="close"\r\n      ng-click="$close()">\r\n      <span aria-hidden="true">&times;</span>\r\n    </button>\r\n    <h3 class="modal-title expression">{{filter}}</h3>\r\n  </div>\r\n  <div class="modal-body">\r\n    <table class="table table-condensed table-striped table-hover no-margin">\r\n      <thead>\r\n        <tr>\r\n          <th width="20">\r\n            #\r\n          </th>\r\n          <th ng-repeat="column in head track by $index">\r\n            {{::column}}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody ng-init="limit = 8">\r\n        <tr ng-repeat="rows in body | limitTo:limit">\r\n          <td>\r\n            <strong>{{::$index+1}}</strong>\r\n          </td>\r\n          <td ng-repeat="cell in rows.data track by $index">\r\n            {{::cell}}\r\n          </td>\r\n        </tr>\r\n        <tr ng-if="body.length > limit">\r\n          <td colspan="{{head.length+1}}">\r\n          ...\r\n          </td>\r\n        </tr>\r\n        <tr ng-if="body.length > limit">\r\n          <td>\r\n            <strong>{{body.length}}</strong>\r\n          </td>\r\n          <td ng-repeat="cell in body[body.length-1].data track by $index">\r\n            {{::cell}}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div><\/script> <script type="text/ng-template" id="helpFilter.html"><div class="modal-header">\r\n    <button type="button"\r\n      class="close"\r\n      ng-click="$close()">\r\n      <span aria-hidden="true">&times;</span>\r\n    </button>\r\n    <h3 class="modal-title">Filtros JavaScript</h3>\r\n  </div>\r\n  <div class="modal-body">\r\n    <p class="lead">São trechos de código também conhecidos como expressões, que quando executados devem retornar um valor considerado verdadeiro.</p>\r\n\r\n    <legend>Quais atributos estão disponíveis?</legend>\r\n    <p>Todos os atributos do candidato\r\n    <kbd ng-repeat="attr in ::attrs track by $index" ng-show="attr">{{attr}}</kbd>\r\n    podem ser utilizados como variáveis para verificar a validade de um registro mediante o filtro aplicado.<p>\r\n\r\n    <legend>Quais operadores estão disponíveis?</legend>\r\n    <p>É possível utilizar operadores matemáticos, condicionais e métodos nativos do prototype do tipo de dado. Tenha em mente que o resultado da execução da expressão deve retornar um valor considerado verdadeiro para que o registro seja filtrado.</p>\r\n\r\n    <legend>Exemplos:</legend>\r\n\r\n    <p>\r\n      {{attrs[0]}} deve ser verdadeiro<br>\r\n      <input type="text"\r\n        class="form-control expression"\r\n        value="!!{{attrs[0]}}"\r\n        readonly>\r\n    </p>\r\n\r\n    <p>\r\n      {{attrs[1] || attrs[0]}} deve conter o termo "primeiro lote"<br>\r\n      <input type="text"\r\n        class="form-control expression"\r\n        value="{{attrs[1] || attrs[0]}}.indexOf(\'primeiro lote\') > -1"\r\n        readonly>\r\n    </p>\r\n\r\n    <p>\r\n      {{attrs[2] || attrs[1] || attrs[0]}} deve estar preenchido e {{attrs[0]}} deve ser maior que 10 ou {{attrs[1] || attrs[0]}} deve ser igual a Azul<br>\r\n      <input type="text"\r\n        class="form-control expression"\r\n        value="({{attrs[2] || attrs[1] || attrs[0]}} != \'\' && {{attrs[0]}} > 10) || {{attrs[1] || attrs[0]}} == \'Azul\'"\r\n        readonly>\r\n    </p>\r\n\r\n  </div><\/script>')}]);